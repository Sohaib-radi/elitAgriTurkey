# Generated by Django 5.1.1 on 2025-02-09 07:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('productModule', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_name', models.CharField(help_text='Name of the buyer', max_length=255, verbose_name='Buyer Name')),
                ('buyer_number', models.CharField(help_text='Unique buyer number', max_length=50, unique=True, verbose_name='Buyer Number')),
                ('phone', models.CharField(help_text='Phone number of the buyer', max_length=20, verbose_name='Phone')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the buyer was registered', verbose_name='Creation Date')),
            ],
            options={
                'verbose_name': 'Buyer',
                'verbose_name_plural': 'Buyers',
                'ordering': ['buyer_number'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_number', models.CharField(help_text='Unique identifier for the company', max_length=50, unique=True, verbose_name='Company Number')),
                ('company_name', models.CharField(help_text='Name of the company', max_length=255, verbose_name='Company Name')),
                ('branch_name', models.CharField(help_text='Name of the branch', max_length=255, verbose_name='Branch Name')),
                ('branch_address', models.CharField(help_text='Address of the branch', max_length=255, verbose_name='Branch Address')),
                ('phone', models.CharField(help_text='Phone number', max_length=20, verbose_name='Phone')),
                ('description', models.TextField(help_text='Additional details', verbose_name='Description')),
                ('service', models.CharField(choices=[('WTR', 'Water'), ('ELE', 'Electricity'), ('GAS', 'Gas'), ('OT', 'Other')], help_text='Service type (Water, Electricity, Gas, Other)', max_length=3, verbose_name='Service')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the company was registered', verbose_name='Creation Date')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['company_number'],
            },
        ),
        migrations.CreateModel(
            name='Debt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debtor_number', models.CharField(help_text='Number of buyer, supplier, person, or employee associated with the debt', max_length=50, verbose_name='Debtor Number')),
                ('name', models.CharField(help_text='Name of the debtor', max_length=255, verbose_name='Name')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Value of the debt', max_digits=10, verbose_name='Amount')),
                ('debt_reason', models.TextField(help_text='Purpose of the debt', verbose_name='Debt Reason')),
                ('due_date', models.DateField(help_text='Due date for debt repayment', verbose_name='Due Date')),
                ('debt_status', models.CharField(choices=[('DUE', 'Due'), ('PART', 'Partially Paid'), ('FULL', 'Fully Paid')], help_text='Status of the debt', max_length=4, verbose_name='Debt Status')),
                ('description', models.TextField(help_text='Additional details about the debt', verbose_name='Description')),
                ('image', models.ImageField(blank=True, help_text='Attach an image of related documents', null=True, upload_to='debts/', verbose_name='Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the debt was recorded', verbose_name='Creation Date')),
            ],
            options={
                'verbose_name': 'Debt',
                'verbose_name_plural': 'Debts',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_name', models.CharField(help_text='Name of the expense list', max_length=255, verbose_name='List Name')),
                ('list_number', models.CharField(help_text='Unique identifier for the expense list', max_length=50, unique=True, verbose_name='List Number')),
                ('expense_type', models.CharField(help_text='Type of expense', max_length=100, verbose_name='Expense Type')),
                ('monthly_expense', models.DecimalField(decimal_places=2, help_text='Monthly expense budget', max_digits=10, verbose_name='Monthly Expense')),
                ('image', models.ImageField(blank=True, help_text='Attach an image', null=True, upload_to='expense_lists/', verbose_name='Image')),
                ('description', models.TextField(help_text='Description of the expense list', verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the expense list was created', verbose_name='Creation Date')),
            ],
            options={
                'verbose_name': 'Expense List',
                'verbose_name_plural': 'Expense Lists',
                'ordering': ['list_number'],
            },
        ),
        migrations.CreateModel(
            name='RevenueList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_name', models.CharField(help_text='Name of the revenue list', max_length=255, verbose_name='Revenue List Name')),
                ('list_number', models.CharField(help_text='Unique number for the revenue list', max_length=50, unique=True, verbose_name='List Number')),
                ('associated_number', models.CharField(help_text='Associated number (e.g., project, product)', max_length=50, verbose_name='Associated Number')),
                ('description', models.TextField(help_text='Description of the revenue list', verbose_name='Description')),
                ('image', models.ImageField(blank=True, help_text='Attach an image', null=True, upload_to='revenue_lists/', verbose_name='Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the revenue list was created', verbose_name='Creation Date')),
            ],
            options={
                'verbose_name': 'Revenue List',
                'verbose_name_plural': 'Revenue Lists',
                'ordering': ['list_number'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_number', models.CharField(help_text='Unique identifier for the expense item', max_length=50, unique=True, verbose_name='Expense Number')),
                ('name', models.CharField(help_text='Name of the expense or its reference number', max_length=255, verbose_name='Expense Name')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of the expense', max_digits=10, verbose_name='Amount')),
                ('description', models.TextField(help_text='Additional details about the expense', verbose_name='Description')),
                ('date', models.DateField(help_text='Date of the expense', verbose_name='Date')),
                ('status', models.CharField(help_text='Status of the expense (e.g. pending, approved)', max_length=50, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the expense was added', verbose_name='Creation Date')),
                ('expense_list', models.ForeignKey(help_text='Associated expense list', on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='expenseModule.expenselist', verbose_name='Expense List')),
            ],
            options={
                'verbose_name': 'Expense Item',
                'verbose_name_plural': 'Expense Items',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(help_text='Unique order number', max_length=50, unique=True, verbose_name='Order Number')),
                ('date', models.DateField(help_text='Date of the order', verbose_name='Date')),
                ('accountant_signature', models.CharField(help_text='Signature of the accountant', max_length=255, verbose_name='Accountant Signature')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the order was created', verbose_name='Creation Date')),
                ('product', models.ForeignKey(blank=True, help_text='Product associated with the order (FK)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='productModule.product', verbose_name='Product')),
                ('supplier', models.ForeignKey(blank=True, help_text='Supplier associated with the order (FK)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='productModule.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['order_number'],
            },
        ),
        migrations.CreateModel(
            name='PaymentVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_number', models.CharField(help_text='Unique payment voucher number', max_length=50, unique=True, verbose_name='Voucher Number')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount paid', max_digits=10, verbose_name='Amount')),
                ('description', models.TextField(help_text='Details about the voucher', verbose_name='Description')),
                ('date', models.DateField(help_text='Date of the payment voucher', verbose_name='Date')),
                ('accountant_signature', models.CharField(help_text='Signature of the accountant', max_length=255, verbose_name='Accountant Signature')),
                ('receiver_signature', models.CharField(help_text='Signature of the receiver', max_length=255, verbose_name='Receiver Signature')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the voucher was created', verbose_name='Creation Date')),
                ('supplier', models.ForeignKey(blank=True, help_text='Supplier (FK)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='productModule.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Payment Voucher',
                'verbose_name_plural': 'Payment Vouchers',
                'ordering': ['voucher_number'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_number', models.CharField(help_text='Unique identifier for the purchase transaction', max_length=50, unique=True, verbose_name='Purchase Number')),
                ('address', models.CharField(help_text='Address related to the purchase', max_length=255, verbose_name='Address')),
                ('date', models.DateField(help_text='Date of the purchase', verbose_name='Date')),
                ('quantity', models.PositiveIntegerField(help_text='Quantity purchased', verbose_name='Quantity')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of the purchase', max_digits=10, verbose_name='Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the purchase transaction was recorded', verbose_name='Creation Date')),
                ('product', models.ForeignKey(blank=True, help_text='Product purchased (FK)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='productModule.product', verbose_name='Product')),
                ('supplier', models.ForeignKey(blank=True, help_text='Supplier (FK)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='productModule.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Purchase Transaction',
                'verbose_name_plural': 'Purchase Transactions',
                'ordering': ['purchase_number'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseTransactionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(help_text='Method of payment used', max_length=100, verbose_name='Payment Method')),
                ('payment_terms', models.CharField(help_text='Payment terms (e.g., cash, installment)', max_length=255, verbose_name='Payment Terms')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount due to the supplier', max_digits=10, verbose_name='Total Amount')),
                ('total_transactions', models.PositiveIntegerField(help_text='Total number of transactions with the supplier', verbose_name='Total Transactions')),
                ('amount_per_transaction', models.DecimalField(decimal_places=2, help_text='Amount for each individual transaction', max_digits=10, verbose_name='Amount Per Transaction')),
                ('transaction_date', models.DateField(help_text='Date of the transaction', verbose_name='Transaction Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the transaction detail was added', verbose_name='Creation Date')),
                ('supplier', models.ForeignKey(blank=True, help_text='Supplier associated with the transaction detail', null=True, on_delete=django.db.models.deletion.SET_NULL, to='productModule.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Purchase Transaction Detail',
                'verbose_name_plural': 'Purchase Transaction Details',
                'ordering': ['transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='ReceiptVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_number', models.CharField(help_text='Unique receipt voucher number', max_length=50, unique=True, verbose_name='Voucher Number')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount received', max_digits=10, verbose_name='Amount')),
                ('date', models.DateField(help_text='Date of the receipt voucher', verbose_name='Date')),
                ('description', models.TextField(help_text='Details about the voucher', verbose_name='Description')),
                ('receiver_signature', models.CharField(help_text='Signature of the receiver', max_length=255, verbose_name='Receiver Signature')),
                ('accountant_signature', models.CharField(help_text='Signature of the accountant', max_length=255, verbose_name='Accountant Signature')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the voucher was created', verbose_name='Creation Date')),
                ('buyer', models.ForeignKey(blank=True, help_text='Buyer (FK)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='expenseModule.buyer', verbose_name='Buyer')),
            ],
            options={
                'verbose_name': 'Receipt Voucher',
                'verbose_name_plural': 'Receipt Vouchers',
                'ordering': ['voucher_number'],
            },
        ),
        migrations.CreateModel(
            name='RevenueItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_number', models.CharField(help_text='Unique identifier for the revenue item', max_length=50, unique=True, verbose_name='Item Number')),
                ('description', models.TextField(help_text='Description of the revenue item', verbose_name='Description')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of revenue', max_digits=10, verbose_name='Amount')),
                ('date', models.DateField(help_text='Date of the revenue item', verbose_name='Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the revenue item was added', verbose_name='Creation Date')),
                ('revenue_list', models.ForeignKey(help_text='Associated revenue list (FK)', on_delete=django.db.models.deletion.CASCADE, related_name='revenues', to='expenseModule.revenuelist', verbose_name='Revenue List')),
            ],
            options={
                'verbose_name': 'Revenue Item',
                'verbose_name_plural': 'Revenue Items',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='SaleTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_number', models.CharField(help_text='Unique identifier for the sale', max_length=50, unique=True, verbose_name='Sale Number')),
                ('sale_place', models.CharField(help_text='Place where the sale occurred', max_length=255, verbose_name='Sale Place')),
                ('address', models.CharField(help_text='Address of the sale', max_length=255, verbose_name='Address')),
                ('phone', models.CharField(help_text='Phone number for contact', max_length=20, verbose_name='Phone')),
                ('date', models.DateField(help_text='Date of the sale', verbose_name='Date')),
                ('quantity', models.PositiveIntegerField(help_text='Quantity sold', verbose_name='Quantity')),
                ('total_value', models.DecimalField(decimal_places=2, help_text='Total sales value', max_digits=10, verbose_name='Total Value')),
                ('price_per_product', models.DecimalField(decimal_places=2, help_text='Price for each product', max_digits=10, verbose_name='Price Per Product')),
                ('payment_method', models.CharField(help_text='Payment method used', max_length=100, verbose_name='Payment Method')),
                ('delivery_date', models.DateField(help_text='Date of delivery', verbose_name='Delivery Date')),
                ('vat', models.DecimalField(decimal_places=2, help_text='Calculated VAT based on sale value', max_digits=10, verbose_name='VAT')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the sale was recorded', verbose_name='Creation Date')),
                ('buyer', models.ForeignKey(blank=True, help_text='Buyer (FK)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='expenseModule.buyer', verbose_name='Buyer')),
                ('product', models.ForeignKey(blank=True, help_text='Product sold (FK)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='productModule.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Sale Transaction',
                'verbose_name_plural': 'Sale Transactions',
                'ordering': ['sale_number'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_name', models.CharField(help_text='Name of the subscription', max_length=255, verbose_name='Subscription Name')),
                ('subscription_number', models.CharField(help_text='Unique identifier for the subscription', max_length=50, unique=True, verbose_name='Subscription Number')),
                ('subscription_account_number', models.CharField(help_text='Subscription account number', max_length=50, verbose_name='Account Number')),
                ('monthly_amount', models.DecimalField(decimal_places=2, help_text='Monthly subscription amount', max_digits=10, verbose_name='Monthly Amount')),
                ('payment_method', models.CharField(help_text='Method of payment', max_length=100, verbose_name='Payment Method')),
                ('start_date', models.DateField(help_text='Subscription start date', verbose_name='Start Date')),
                ('end_date', models.DateField(help_text='Subscription end date', verbose_name='End Date')),
                ('description', models.TextField(help_text='Additional details', verbose_name='Description')),
                ('address', models.CharField(help_text='Address associated with the subscription', max_length=255, verbose_name='Address')),
                ('image', models.ImageField(blank=True, help_text='Attach an image (optional)', null=True, upload_to='subscriptions/', verbose_name='Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the subscription was created', verbose_name='Creation Date')),
                ('company', models.ForeignKey(blank=True, help_text='Associated company (FK)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='expenseModule.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['subscription_number'],
            },
        ),
    ]
